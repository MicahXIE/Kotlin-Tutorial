ssh-add -K ~/.ssh/my-new-ssh-key1

Initialize project:
echo "# freedom" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/MicahXIE/freedom.git
git push -u origin master
git pull origin master

git remote add origin https://github.com/MicahXIE/freedom.git
git push -u origin master

git diff
git log
git show <commit hash id>
git revert <commit hash id>


Upstream setup:
git remote -v
git remote add origin git@bitbucket.org:Micah2019/ml-platform-core.git
git pull origin master
git remote add upstream git@bitbucket.org:ucare-tech/ml-platform-core.git
git pull upstream master


Branch Operation:
# https://git-scm.com/book/en/v2/Git-Branching-Basic-Branching-and-Merging
git checkout -b iss53
or
git branch iss53
git checkout iss53
vim index.html
git commit -a -m 'fixed the broken email'

git checkout master  => switch to master
git merge hotfix => merge the index.html

git branch -d hotfix
git commit -a -m 'C5 changes'

git checkout master
git merge iss53
git branch -d iss53 # delete the iss53 branch

git status


<<<<<<< HEAD:index.html (master)
<div id="footer">contact : email.support@github.com</div>
======= (iss53)
<div id="footer">
 please contact us at support@github.com
</div>
>>>>>>> iss53:index.html


# avoid merge 
如果希望保留生产服务器上所做的改动,仅仅并入新配置项, 处理方法如下:
git stash
git pull
git stash pop

然后可以使用git diff -w +文件名 来确认代码自动合并的情况.


反过来,如果希望用代码库中的文件完全覆盖本地工作版本. 方法如下:

git reset --hard
git pull

王修改了文件A并且push到了git server上，这时李也在修改文件A，但修改没有完成，李希望获得最新的代码，如果李直接pull的话会遇到一下问题：

error: Your local changes to the following files would be overwritten by merge:

***************************************

Please, commit your changes or stash them before you can merge.


reference: https://blog.csdn.net/matrix_laboratory/article/details/18034509


你要知道的第一件事是，git rebase 和git merge 做的事其实是一样的。它们都被设计来将一个分支的更改并入另一个分支，只不过方式有些不同。



